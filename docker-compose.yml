version: '3.9'


services:
  # frontend:
  #   build: ./front-end
  #   ports:
  #     - 3000:3000
  #   platform: linux/x86_64
  #   working_dir: /home/node/app
  #   volumes:
  #     - .:/home/node/app
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  # backend:
  #   container_name: app_backend
  #   build: ./back-end
  #   ports:
  #     - 3001:3001
  #   platform: linux/x86_64
  #   working_dir: /home/node/app
  #   volumes:
  #     - .:/home/node/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   environment:
  #     # Os dados abaixo se referem ao container `db`
  #     # Dica: Relembre aqui da comunicação interna entre containers
  #     - MYSQL_USER=root
  #     - MYSQL_ROOT_PASSWORD=123456
  #     - MYSQL_HOST=localhost
  #     - API_PORT=3001    
  #   healthcheck:
  #     test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
  db:
    image: mysql:latest
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
       - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores